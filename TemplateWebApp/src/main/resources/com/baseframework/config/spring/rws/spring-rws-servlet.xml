<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">


	<!-- I have JAXB2 and Jackson on my classpath, Spring MVC will automatically 
		setup the necessary HttpMessageConverters. -->

	<!-- https://spring.io/blog/2013/05/11/content-negotiation-using-spring-mvc -->
	<!-- Setup a simple strategy: 1. Take all the defaults. 2. Return JSON by 
		default when not sure. -->
	<beans:bean id="contentNegotiationManager"
		class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
		<beans:property name="favorPathExtension" value="true" />
		<beans:property name="favorParameter" value="true" /> <!-- ?mediaType=json -->
		<beans:property name="parameterName" value="mediaType" />
		<beans:property name="ignoreAcceptHeader" value="false" />
		<beans:property name="useJaf" value="false" />
		<beans:property name="defaultContentType" value="application/json" />
		<beans:property name="mediaTypes">
			<beans:map>
				<beans:entry key="json" value="application/json" />
				<beans:entry key="xml" value="application/xml" />
			</beans:map>
		</beans:property>
	</beans:bean>

	<!-- Make this available across all of Spring MVC -->
	<!-- If you dont include mvc:annotation-driven also your MVC application 
		would work if you have used the context:component-scan for creating the beans 
		or defined the beans in your XML file. But, mvc:annotation-driven does some 
		extra job on configuring the special beans that would not have been configured 
		if you are not using this element in your XML file. -->
	<annotation-driven content-negotiation-manager="contentNegotiationManager" />
	<context:component-scan base-package="com.baseframework.rws" />

</beans:beans>