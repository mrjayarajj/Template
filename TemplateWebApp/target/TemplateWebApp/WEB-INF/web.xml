<?xml version="1.0" encoding="UTF-8"?>
<!-- http://www.mkyong.com/web-development/the-web-xml-deployment-descriptor-examples/ -->
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee 
		 http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
	version="3.1">

	<display-name>TemplateWebApp</display-name>

	<!-- ##### LISTENER START HERE ##### -->
	<listener>
		<description>Loads the root application context of this web app at startup. -
			The application context is then available via - WebApplicationContextUtils.getWebApplicationContext(servletContext).
			Creates the Spring Container shared by all Servlets and Filters
		</description>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	<context-param>
		<description>The definition of the Root Spring Container shared by all Servlets and Filters </description>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:\spring.xml</param-value>
	</context-param>
	<listener>
		<description>The RequestContextListener exposes the 'request' scope to the context.</description>
		<listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
	</listener>
	<listener>
		<listener-class>com.baseframework.web.listeners.SessionListener</listener-class>
	</listener>
	<listener>
		<listener-class>com.baseframework.web.listeners.ContextListener</listener-class>
	</listener>
	<listener>
		<listener-class>com.baseframework.web.listeners.RequestListener</listener-class>
	</listener>
	<listener>
		<listener-class>org.apache.struts2.tiles.StrutsTilesListener</listener-class>
	</listener>
	<context-param>
		<param-name>org.apache.tiles.impl.BasicTilesContainer.DEFINITIONS_CONFIG</param-name>
		<param-value>/WEB-INF/tiles.xml</param-value>
	</context-param>
	<!-- <listener> <listener-class>net.sf.ehcache.constructs.web.ShutdownListener</listener-class> 
		</listener> -->
	<!-- Publishes events for session creation and destruction through the application 
		- context. Optional unless concurrent session control is being used. -->
	<listener>
		<listener-class>org.springframework.security.web.session.HttpSessionEventPublisher</listener-class>
	</listener>

	<listener>
		<listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
	</listener>
	<context-param>
		<param-name>log4jConfigLocation</param-name>
		<param-value>classpath:/log4j.properties</param-value>
	</context-param>
	<listener>
		<listener-class>org.apache.logging.log4j.web.Log4jServletContextListener</listener-class>
	</listener>
	<!-- ##### LISTENER END HERE ##### -->
	<!-- ##### FILTER STARTS HERE ##### -->
	<filter>
		<description>This must be first filter to log any request. IMPORTANT: This should not be moved from here</description>
		<filter-name>log4jServletFilter</filter-name>
		<filter-class>org.apache.logging.log4j.web.Log4jServletFilter</filter-class>
		<async-supported>true</async-supported>
	</filter>
	<filter-mapping>
		<filter-name>log4jServletFilter</filter-name>
		<url-pattern>/*</url-pattern>
		<dispatcher>REQUEST</dispatcher>
		<dispatcher>FORWARD</dispatcher>
		<dispatcher>INCLUDE</dispatcher>
		<dispatcher>ERROR</dispatcher>
		<dispatcher>ASYNC</dispatcher><!-- Servlet 3.0 w/ disabled auto-initialization 
			only; not supported in 2.5 -->
	</filter-mapping>
	<filter>
		<filter-name>RequestLoggerFilter</filter-name>
		<filter-class>com.baseframework.web.filters.RequestLoggerFilter</filter-class>
		<async-supported>true</async-supported>
	</filter>
	<filter-mapping>
		<filter-name>RequestLoggerFilter</filter-name>
		<url-pattern>/*</url-pattern>
		<dispatcher>FORWARD</dispatcher>
		<dispatcher>REQUEST</dispatcher>
		<dispatcher>INCLUDE</dispatcher>
		<dispatcher>ERROR</dispatcher>
	</filter-mapping>
	<filter>
		<filter-name>springSecurityFilterChain</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
		<async-supported>true</async-supported>
	</filter>
	<filter-mapping>
		<filter-name>springSecurityFilterChain</filter-name>
		<url-pattern>/*</url-pattern>
		<dispatcher>REQUEST</dispatcher>
		<dispatcher>FORWARD</dispatcher>
		<dispatcher>INCLUDE</dispatcher>
		<dispatcher>ERROR</dispatcher>
	</filter-mapping>
	<filter>
		<filter-name>CompressionFilter</filter-name>
		<filter-class>net.sf.ehcache.constructs.web.filter.GzipFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>CompressionFilter</filter-name>
		<url-pattern>*.css</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>CompressionFilter</filter-name>
		<url-pattern>*.html</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>CompressionFilter</filter-name>
		<url-pattern>*.js</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>CompressionFilter</filter-name>
		<url-pattern>*.ico</url-pattern>
	</filter-mapping>
	<filter>
		<filter-name>struts2</filter-name>
		<filter-class>org.apache.struts2.dispatcher.FilterDispatcher</filter-class>
		<async-supported>true</async-supported>
	</filter>
	<filter-mapping>
		<filter-name>struts2</filter-name>
		<url-pattern>/*</url-pattern>
		<dispatcher>REQUEST</dispatcher>
		<dispatcher>ERROR</dispatcher>
	</filter-mapping>
	<filter>
		<filter-name>jspIncludeFilter</filter-name>
		<filter-class>com.baseframework.web.filters.JSPIncludeFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>jspIncludeFilter</filter-name>
		<url-pattern>*.jsp</url-pattern>
		<dispatcher>FORWARD</dispatcher>
		<dispatcher>REQUEST</dispatcher>
		<dispatcher>INCLUDE</dispatcher>
		<dispatcher>ERROR</dispatcher>
	</filter-mapping>
	<!-- ##### FILTER ENDS HERE ##### -->
	<!-- ##### SERVLET STARTS HERE ##### -->
	<servlet>
		<servlet-name>spring-ws</servlet-name>
		<servlet-class>org.springframework.ws.transport.http.MessageDispatcherServlet</servlet-class>
		<init-param>
			<description>
				The Servlet (Message)DispatcherServlet
				loads another ApplicationContext which uses the one loaded with the ContextLoaderListener as a parent.
			</description>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath:\com\baseframework\config\spring\ws\spring-ws-servlet.xml</param-value>
		</init-param>
		<init-param>
			<param-name>transformWsdlLocations</param-name>
			<param-value>true</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>spring-ws</servlet-name>
		<url-pattern>*.wsdl</url-pattern>
	</servlet-mapping>
	<servlet>
		<servlet-name>spring-mvc</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<description>
				The Servlet DispatcherServlet
				loads another ApplicationContext which uses the one loaded with the ContextLoaderListener as a parent.
			</description>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath:\com\baseframework\config\spring\mvc\spring-mvc-servlet.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
		<!-- java.lang.IllegalStateException: Async support must be enabled on 
			a servlet and for all filters involved in async request processing. This 
			is done in Java code using the Servlet API or by adding "<async-supported>true</async-supported>" 
			to servlet and filter declarations in web.xml. -->
		<async-supported>true</async-supported>
	</servlet>
	<servlet-mapping>
		<servlet-name>spring-mvc</servlet-name>
		<url-pattern>/rws/*</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>spring-mvc</servlet-name>
		<url-pattern>/wst/*</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>spring-mvc</servlet-name>
		<url-pattern>/media/*</url-pattern>
	</servlet-mapping>
	<!-- ##### SERVLET ENDS HERE ##### -->
	<error-page>
		<error-code>404</error-code>
		<location>/jsp/base/error/404.jsp</location>
	</error-page>
	<error-page>
		<error-code>500</error-code>
		<location>/jsp/base/error/500.jsp</location>
	</error-page>
	<session-config>
		<session-timeout>60</session-timeout>
	</session-config>
	<welcome-file-list>
		<welcome-file>index.html</welcome-file>
		<welcome-file>index.htm</welcome-file>
		<welcome-file>index.jsp</welcome-file>
		<welcome-file>default.html</welcome-file>
		<welcome-file>default.htm</welcome-file>
		<welcome-file>default.jsp</welcome-file>
	</welcome-file-list>
	<jsp-config>
		<jsp-property-group>
			<url-pattern>*.jsp</url-pattern>
			<el-ignored>false</el-ignored>
			<page-encoding>UTF-8</page-encoding>
			<scripting-invalid>false</scripting-invalid>
			<is-xml>false</is-xml>
		</jsp-property-group>
	</jsp-config>
</web-app>